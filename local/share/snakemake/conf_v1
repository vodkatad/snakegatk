ROOT='/home/egrassi'
import os
def find_prj_root(path=os.getcwd()):
    if os.path.isfile(os.path.join(path,".PRJ_ROOT")):
        return path
    else:
        if path:
            return find_prj_root(os.path.dirname(path))
        else:
            raise Exception("Can not find the PRJ_ROOT directory")


PRJ_ROOT=find_prj_root()

SRC_DIR=PRJ_ROOT+'/local/src'
BIN_DIR=PRJ_ROOT+'/local/bin'
DATA_DIR=PRJ_ROOT+'/local/share/data'
REF_DIR='/home/egrassi/strata/local/share/data'
DEBUG="yes"

## This dataset:
DATA=PRJ_ROOT+"/local/share/data/example"
#FQ_DIR=PRJ_ROOT+"/dataset/v1"
FQ_XENOME_DIR="xenome"
EXONS=DATA+'/targeted.bed'
SEXONS='targeted_sorted.bed'
LSEXONS='targeted_sorted.bed'

# sed 1d PJ1903090-SF-Integragen-Targeted-Seq.tsv  | cut -f 1 | tr "_" "\t" | cut -f 1 | tr "\n" "," | sed 's/,/","/g'
SAMPLES_ORIG=["example"]
SAMPLES=["pippo"]
REF=""
SAMPLESD=[]
SAMPS=",".join(SAMPLESD)
XENOMED_SAMPLES=[]
TRIMMED_SAMPLES=[]

FASTQ_SUFFIX="_{pair}.fastq.gz"
FASTQ_SUFFIX_XENOME="_human_{pair}.fastq"

PAIRS=['R1','R2']
PAIRS_XENOME=['1','2']
CORES=8
MEM=4
# TODO need to adapt to unpaired (do they exists?) reads, will need to change the all rule in the subdirs using an input function...
PATTERNED=2500 
# HiSeq4000, otherwise 100 for unpatterned
#â€“o recal.bam
LOWERAF="0.0000025"

wildcard_constraints:
    sample="[a-zA-Z0-9]+"

# Used references
#https://gdc.cancer.gov/about-data/data-harmonization-and-generation/gdc-reference-files based on
#ftp://ftp.ncbi.nlm.nih.gov/genomes/archive/old_genbank/Eukaryotes/vertebrates_mammals/Homo_sapiens/GRCh38/seqs_for_alignment_pipelines/README_ANALYSIS_SETS
# DBSNP 151 ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b151_GRCh38p7/VCF/All_20180418.vcf.gz
ANNOTATIONS=ROOT+"/common/task/annotations/dataset/gdc"

CALLABLE="5:10,10:50,50:100,100:150,150:inf"
CALLABLE_STRICT="50:100,100:150,150:inf"

PADDING=100
MINDP=10

GNOMAD=ROOT+"/common/task/annotations/dataset/gnomad"
VEP_CACHE_DIR=ROOT+"/common/task/variant_annotations/dataset/VEP"
REFFLATGZ=ROOT+"/common/task/annotations/dataset/ucsc/hg38/refFlat.txt.gz"

# Singularity containers
GATK_SING=ROOT+"/gatk4100/gatk.img"


rule all_single_something:
    input: expand("{{dir}}/{sample}.{{something}}", sample=SAMPLES)
    output: "{dir}/all_samples_{something}"
    shell: "mkdir -p {wildcards.dir}; touch {output}"


# Other phases Snakefiles are included here without symbolic links: in this way the right ones need to be
# plugged in the base conf.sk
ALIGN_DIR="align"
include: PRJ_ROOT+"/local/share/snakerule/Snakefile_align_calibrate_WES_basedir"

# then mutect
MUTECT_DIR="mutect"
include: PRJ_ROOT+"/local/share/snakerule/Snakefile_mutect2_WES_basedir"
