def find_matched_normal_mpileup(wildcards):
    return {'normal': VARSCAN_DIR+"/"+find_matched_normal_sample(wildcards)+".mpileup.gz"}
    
rule paired_snp:
    input: unpack(find_matched_normal_mpileup), tumor=ALIGN_DIR+"/markedDup_{sample}.sorted.bam", reference=REF_DIR+"/GRCh38.d1.vd1.fa"
    output: VARSCAN_DIR+"/{sample}.snp.vcf.gz", VARSCAN_DIR+"/{sample}.indel.vcf.gz"
    log: VARSCAN_DIR+"/{sample}.log"
    params: prefix=VARSCAN_DIR+"/{sample}", dir=VARSCAN_DIR
    shell:
        """
            mkdir -p {params.dir};
            varscan somatic <(zcat {input.normal}) <(samtools mpileup -q 1 -B -f {input.reference} {input.tumor}) {params.prefix} --strand-filter 1 --output-vcf 1 2> {log};
            bgzip {params.prefix}.snp.vcf;
            bgzip {params.prefix}.indel.vcf;
        """

rule mpileup:
    input: reference=REF_DIR+"/GRCh38.d1.vd1.fa", bam=ALIGN_DIR+"/markedDup_{sample}.sorted.bam"
    output: VARSCAN_DIR+"/{sample}.mpileup.gz"
    shell:
        """
            samtools mpileup -q 1 -B -f {input.reference} {input.bam} | gzip > {output}
        """

rule filter_snp:
    input: snp=VARSCAN_DIR+"/{sample}.snp.vcf.gz", indel=VARSCAN_DIR+"/{sample}.indel.vcf.gz", bed=CALLABLE_BED
    output: VARSCAN_DIR+"/{sample}.pass.vcf.gz"
    params: cores=CORES
    shell:
        """
            bcftools concat -d -a {input.snp} {input.indel} --threads {params.cores} \
            | bctfools view -s TUMOR --threads {params.cores} -i'INFO/SS == 2 || INFO/SS==3' > {output}.tmp
            bedtools intersect -header -u -a {output}.vcf.tmp -b {input.bed} | bgzip > {output}
            rm {output}.tmp
        """

#merge snp and indel and intersect with our WGS alignable interval