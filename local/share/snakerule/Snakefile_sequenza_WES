#CNV_DIR="sequenza"
#ALIGN_DIR="align_calibrate"
CHRS=["chr"+str(x) for x in range(1,23)]+["chrX","chrY"]

rule all_seq:
    input: expand(CNV_DIR+"/{sample}", sample=TUMOR)
    output: CNV_DIR+"/all_sequenza.plh"
    shell: "mkdir -p sequenza; touch {output}"

rule allseqz:
    input: expand(CNV_DIR+"/{{sample}}_{ch}.seqz.gz", ch=CHRS)
    output: CNV_DIR+"/{sample}.all.seqz.gz"
    shell:
        """
            zcat {input} | gawk '{{if (NR!=1 && $1 != "chromosome") {{print $0}}}}' | bgzip > {output};
            tabix -f -s 1 -b 2 -e 2 -S 1 {output};
        """

def find_matched_normal_seq(wildcards):
    return {'normal': ALIGN_DIR+"/realigned_"+find_matched_normal_sample(wildcards)+".sorted.bam"}
    
rule sseqz:
    input:  unpack(find_matched_normal_seq), tumor=ALIGN_DIR+"/realigned_{sample}.sorted.bam", ref=REF_DIR+"/GRCh38.d1.vd1.fa", gc=GCFILE
    output: expand(CNV_DIR+"/{{sample}}_{ch}.seqz.gz", ch=CHRS)
    params: dir=CNV_DIR, ch=CHRS, n=len(CHRS)
    threads: len(CHRS)
    benchmark: "bench/{sample}.seqz.gz.times"
    shell:
        """
            mkdir -p {params.dir};
            sequenza-utils bam2seqz -C {params.ch} --parallel {params.n} --fasta {input.ref} -n {input.normal} -t {input.tumor} -gc {input.gc} -o {params.dir}/{wildcards.sample}.seqz.gz;
        """


rule bin_seqz:
    input: CNV_DIR+"/{sample}.all.seqz.gz"
    output: CNV_DIR+"/{sample}.all.bin.seqz.gz"
    params: bin=50
    shell:
        """
         sequenza-utils seqz_binning -w {params.bin} -s {input} | gzip -c > {output}
        """

rule r_seqz:
    input: CNV_DIR+"/{sample}.all.bin.seqz.gz"
    output: directory(CNV_DIR+"/{sample}")
    params: tool=BIN_DIR+"/sequenza"
    benchmark: "bench/{sample}.times"
    shell:
        """
         {params.tool} {wildcards.sample} {input} {output}
        """
